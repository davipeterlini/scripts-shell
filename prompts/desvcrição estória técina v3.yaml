Act as Senior Product Owner who will create a story description: {{Story Title}} according to the instructions below

1. The description should contain the following Topics:
- Context
- Objective
- Acceptance Criteria
- Technical Specification

2. The items above should be marked in bold and there should be a line break between the item and its description

3. Information in the topics: 
* **Context**
    - Should contain summary, restricted to one paragraph, describing the current context or problem to be solved.
    

    - always write the phrase below after the description above, it should have a line break and it should be in bold: 
	THIS DESCRIPTION SHOULD BE REVIEWED, AI SUGGESTION
    
* **Objective** 
    - Should contain summary, restricted to one paragraph, describing what the objective is. technical details should not be included.
    

    - always write the phrase below after the description above, it should have a line break and it should be in bold: 
	THIS DESCRIPTION SHOULD BE REVIEWED, AI SUGGESTION
    
* **Acceptance Criteria** 
    - Should be separated into topics, containing one or more criteria, they should be separated one criterion per line and marked with topics, each one can describe an acceptance criterion or business rules.
    

    - always write the phrase below after the description above, it should have a line break and it should be in bold: 
	THIS DESCRIPTION SHOULD BE REVIEWED, AI SUGGESTION
    
* **Technical Specification** 
    - Should contain an indicator with the {{Repository Link}} provided by the user and describe technical information to help with understanding and/or implementation. For building the description above, consider the details: {{Technical Details}}.
    
    
    - always write the phrase below after the description above, it should have a line break and it should be in bold: 
	THIS DESCRIPTION SHOULD BE REVIEWED, AI SUGGESTION

4. Create a done checklist, with the list below so that the story or task is declared as done
    - **Development of items**
    - **Formatting and Import Optimization** of files according to the project formatting standard 
    - **Construction and execution of unit and integration tests**
    - **Git Commit and Push**
        - Bring a name suggestion in ENGLISH for the branch, based on SemVer (feat, fix, chore) and place it in the <BRANCH_NAME> variable in the code box below:
        
        git checkout -b <BRANCH_NAME>
        
        - Bring the commit message in English following the Conventional Commits structure by placing it in the variable: <COMMIT_MESSAGE>, in the code box below:
        
        git add . && git commit -m "<COMMIT_MESSAGE>" && git push 
        
    - **Opening PR** using the English template, with information in ENGLISH, according to the standard below: 
        - Title to PR: feat({{Story Number}}): {{Story Title}} <!-- The title in Portuguese will be converted internally to English -->
        ```
        ### Overview
        {{Story Title}}  <!-- The title in Portuguese will be converted internally to English -->

        ### Tasks & References
        * Link to the Jira: [{{Story Number}}](https://ciandtjira.atlassian.net/browse/{{Story Number}})
        
        ### Changes
        - {{Story Title}}  <!-- The title in Portuguese should be used to generate the English version -->

        ### Results & Evidence
        - Put Your Results and Evidencies
        ```
    - **Ensure it was executed in the pipeline** 
    - **Code Review**
        - Send in Google Chat to the responsible team to do Code Review, following the standard below:
        ```
        Task: https://ciandtjira.atlassian.net/browse/{{Story Number}}
        PR: {{Repository Link}}pull-requests/<NUMBER>
        ``` 
    - **Do the Merge** 
    - **Wait for Pre-Release merge generation** 
    - **Do Pre-release Merge** 
    - **Monitor pre-release execution in test environments via repo Actions**
    - **Request approval from Front Tech Lead for Release Train**
    - **Check in repo** - to see if the version went to release
